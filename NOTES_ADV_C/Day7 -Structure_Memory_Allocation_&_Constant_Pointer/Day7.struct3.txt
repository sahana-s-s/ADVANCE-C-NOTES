#include<stdio.h>


struct Employee
{
        int id;
        char ch;
}e1={1,'m'},e3;


int main()
{
    struct Employee e2;
    e2=e1;  //valid


    printf("%d %c \n",e1.id,e1.ch);// 1 m
    printf("%d %c \n",e2.id,e2.ch);// 1 m


   // e3=e1+e2;//invalid


    //int res = e1==e2;//invalid
        return 0;
}
=======================================
Memory Allocation 


#include<stdio.h>
//int -> 1 (4 bytes) , char 5 -> (5 bytes) , float -> 2 (8 bytes)
//17bytes


struct Employee
{
        int id;  //4


        char ch; //4
        char ch1;
        char ch2;
        char ch3;


        char ch4;//4


        float f;  //4
        float f1; //4
}e1;


int main()
{
    printf("%d \n",sizeof(e1));
        return 0;
}
==================================
#include<stdio.h>


struct Employee
{
        int id;//4
        short int num;//2 shared


        char ch;//4
        char ch1;
        char ch2;
        char ch3;


        char ch4;//4 -> 1 shared
        char ch5; // 1


        //float f;//4
        //float f1;//4
}e1;


int main()
{
    printf("%lu \n",sizeof(e1)); //12
        return 0;
}
----------------------
#include<stdio.h>


struct Employee
{
    char ch; // 4 bytes


        int id;  //4 bytes


        char ch1; //4 bytes


        char ch2;


        char ch4;


        float f; //4 bytes


        char ch3;// 4 bytes


        float f1; //4 bytes


}e1;


int main()


{


    printf("%d \n",sizeof(e1));


        return 0;


}


=============================
#include<stdio.h>


struct Employee
{
    char ch; // 4 bytes


        int id;  //4 bytes


        char ch1; //4 bytes
        char ch2;


        float f; //4 bytes
        float f1; //4 bytes


        char ch3;// 4 bytes
        char ch4;


}e1;


int main()
{  
   printf("%d \n",sizeof(e1));
   return 0;
}
--------------------------------------------------
#include<stdio.h>


int main()
{
    char ch,ch1,ch2,ch3; //4
    int a,b; //8
    float fnu1,fnum2; //8
    char name[10],address[20];
    
        return 0;
}
----------------------------------------------
#include<stdio.h>


struct Employee
{
        int id;//4
        short int num;//4 -> 2 remaining


        char ch;//4
        char ch1;
        char ch2;
        char ch3;


        char ch4;//4 -> 1 shared
        char ch5; //-> 1
        char ch6; //-> 1
        char ch7; //1 shared why?


        float f;//4
        float f1;//4


        //char ch7; //no sharing
}e1;


int main()
{
    printf("%lu \n",sizeof(e1));//24
        return 0;
}
--------------------------------------
#include<stdio.h>


struct Employee
{
        int id; //8 -> 4
        short int num; //-> 2


        char ch; //8 -> 1
        char ch1;//8 -> 1


        char ch2;//8
        char ch3;


        char ch4;
        char ch5;
        char ch6;
        char ch7;
        char ch8;
        char ch9;


        char ch10;//8 bytes


        float f; //8 shared with f1
        float f1;


        double d1;//8
}e1;


int main()
{
    printf("%lu \n",sizeof(e1));//40
        return 0;
}


--------------------------
#include<stdio.h>


struct Employee
{
        int id;//4
        short int num;//4


        char ch;//4
        char ch1;
        char ch2;
        char ch3;


        char ch4;//4 -> 1 shared
        char ch5; //-> 1
        char ch6; //-> 1


        //float f;//4
        //float f1;//4
}e1;


int main()
{
    printf("%lu \n",sizeof(e1)); //16
        return 0;
}




=======================
#include<stdio.h>


struct Employee
{
        int id;//8


        char ch;//8
        char ch1;
        char ch2;
        char ch3;
        char ch4;


        float f;//8
        float f1;


        double d;  //8
}e1;


int main()
{
    printf("%lu \n",sizeof(e1));
        return 0;
}




=======================
#include<stdio.h>


struct Employee
{
        int id;//8
    int id1;
    
    int id2;//8


        char ch;//8
        char ch1;
        char ch2;
        char ch3;
        char ch4;


        float f;//8
        float f1;


        double d;  //8
        
}e1;


int main()
{
    printf("%lu \n",sizeof(e1));
        return 0;
}
============================
#include<stdio.h>


struct Employee
{
        int id;//8
    int id1;


    int id2;//8


        char ch;//8
        char ch1;
        char ch2;
        char ch3;
        char ch4;


        float f;//8
        float f1;


        double d;  //8
        double d1; //8
}e1;


int main()
{
    printf("%lu \n",sizeof(e1));
        return 0;
}


========================
#include<stdio.h>


struct Employee
{
        int id;//8 -->4


        char ch;//8


        float f;//--->4


        double d; //8


}e1;


int main()
{
    printf("%lu \n",sizeof(e1));
        return 0;
}


------------------------------
#include<stdio.h>


struct Employee
{
        int id;//8 -->4
        char ch;//1 => 3 is left


        float f;//8


        double d; //8 bytes


}e1;


int main()
{
    printf("%lu \n",sizeof(e1));
        return 0;
}